use crate::fetm::{Error, TkKind};

#[derive(Debug, PartialEq)]
pub struct SimItem {
    field_0x1c: usize,
    flag_0: usize,
    flag_1: usize,
    flag_2: usize,
    flag_3: usize,
    flag_4: usize,
    flag_5: usize,
    flag_6: usize,
    flag_7: usize,
    flag_8: usize,
    flag_9: usize,
    flag_10: usize,
    flag_11: usize,
    flag_12: usize,
    flag_13: usize,
    flag_14: usize,
    flag_15: usize,
    flag_16: usize,
    flag_17: usize,
    flag_18: usize,
    flag_19: usize,
    flag_20: usize,
    flag_21: usize,
    flag_22: usize,
    flag_23: usize,
    flag_24: usize,
    flag_25: usize,
    flag_26: usize,
    flag_27: usize,
    flag_28: usize,
    flag_29: usize,
    flag_30: usize,
    flag_31: usize,
    flag_32: usize,
    flag_33: usize,
    flag_34: usize,
    flag_35: usize,
    flag_36: usize,
    flag_37: usize,
    flag_38: usize,
    flag_39: usize,
    flag_40: usize,
    flag_41: usize,
    flag_42: usize,
    flag_43: usize,
    flag_44: usize,
    flag_45: usize,
    flag_46: usize,
    flag_47: usize,
    flag_48: usize,
    flag_49: usize,
    flag_50: usize,
    flag_51: usize,
    flag_52: usize,
    flag_53: usize,
    flag_54: usize,
    flag_55: usize,
    flag_56: usize,
    flag_57: usize,
    flag_58: usize,
    flag_59: usize,
    flag_60: usize,
    flag_61: usize,
    flag_62: usize,
    flag_63: usize,
}

impl SimItem {
    pub const SIZE: usize = 65;
    pub fn from_tokens(data: &[TkKind]) -> Result<Self, Error> {
        Ok(Self {
            field_0x1c: data[0].extract_int()?,
            flag_0: data[1].extract_int()?,
            flag_1: data[2].extract_int()?,
            flag_2: data[3].extract_int()?,
            flag_3: data[4].extract_int()?,
            flag_4: data[5].extract_int()?,
            flag_5: data[6].extract_int()?,
            flag_6: data[7].extract_int()?,
            flag_7: data[8].extract_int()?,
            flag_8: data[9].extract_int()?,
            flag_9: data[10].extract_int()?,
            flag_10: data[11].extract_int()?,
            flag_11: data[12].extract_int()?,
            flag_12: data[13].extract_int()?,
            flag_13: data[14].extract_int()?,
            flag_14: data[15].extract_int()?,
            flag_15: data[16].extract_int()?,
            flag_16: data[17].extract_int()?,
            flag_17: data[18].extract_int()?,
            flag_18: data[19].extract_int()?,
            flag_19: data[20].extract_int()?,
            flag_20: data[21].extract_int()?,
            flag_21: data[22].extract_int()?,
            flag_22: data[23].extract_int()?,
            flag_23: data[24].extract_int()?,
            flag_24: data[25].extract_int()?,
            flag_25: data[26].extract_int()?,
            flag_26: data[27].extract_int()?,
            flag_27: data[28].extract_int()?,
            flag_28: data[29].extract_int()?,
            flag_29: data[30].extract_int()?,
            flag_30: data[31].extract_int()?,
            flag_31: data[32].extract_int()?,
            flag_32: data[33].extract_int()?,
            flag_33: data[34].extract_int()?,
            flag_34: data[35].extract_int()?,
            flag_35: data[36].extract_int()?,
            flag_36: data[37].extract_int()?,
            flag_37: data[38].extract_int()?,
            flag_38: data[39].extract_int()?,
            flag_39: data[40].extract_int()?,
            flag_40: data[41].extract_int()?,
            flag_41: data[42].extract_int()?,
            flag_42: data[43].extract_int()?,
            flag_43: data[44].extract_int()?,
            flag_44: data[45].extract_int()?,
            flag_45: data[46].extract_int()?,
            flag_46: data[47].extract_int()?,
            flag_47: data[48].extract_int()?,
            flag_48: data[49].extract_int()?,
            flag_49: data[50].extract_int()?,
            flag_50: data[51].extract_int()?,
            flag_51: data[52].extract_int()?,
            flag_52: data[53].extract_int()?,
            flag_53: data[54].extract_int()?,
            flag_54: data[55].extract_int()?,
            flag_55: data[56].extract_int()?,
            flag_56: data[57].extract_int()?,
            flag_57: data[58].extract_int()?,
            flag_58: data[59].extract_int()?,
            flag_59: data[60].extract_int()?,
            flag_60: data[61].extract_int()?,
            flag_61: data[62].extract_int()?,
            flag_62: data[63].extract_int()?,
            flag_63: data[64].extract_int()?,
        })
    }
}
