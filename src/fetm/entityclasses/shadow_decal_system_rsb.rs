use crate::fetm::{Error, TkKind};

#[derive(PartialEq, Debug)]
pub struct SpongebobShadowDecalSystem {
    flag_0: usize,
    field_0x20: usize,
    flag_1: usize,
    field_0x24: usize,
    flag_2: usize,
    field_0x28: usize,
    flag_3: usize,
    field_0x2c: usize,
    flag_4: usize,
    field_0x30: usize,
    flag_5: usize,
    field_0x34: usize,
    flag_6: usize,
    field_0x38: usize,
    flag_7: usize,
    field_0x39: usize,
    flag_8: usize,
    field_0x3a: usize,
    flag_9: usize,
    field_0x3b: usize,
    flag_10: usize,
    field_0x3c: usize,
    flag_11: usize,
    field_0x3d: usize,
    flag_12: usize,
    field_0x3e: usize,
    flag_13: usize,
    field_0x3f: usize,
    flag_14: usize,
    field_0x40: usize,
}

impl SpongebobShadowDecalSystem {
    pub fn from_tokens(data: &[TkKind]) -> Result<Self, Error> {
        Ok(Self {
            flag_0: data[0].extract_int()?,
            field_0x20: data[1].extract_int()?,
            flag_1: data[2].extract_int()?,
            field_0x24: data[3].extract_int()?,
            flag_2: data[4].extract_int()?,
            field_0x28: data[5].extract_int()?,
            flag_3: data[6].extract_int()?,
            field_0x2c: data[7].extract_int()?,
            flag_4: data[8].extract_int()?,
            field_0x30: data[9].extract_int()?,
            flag_5: data[10].extract_int()?,
            field_0x34: data[11].extract_int()?,
            flag_6: data[12].extract_int()?,
            field_0x38: data[13].extract_int()?,
            flag_7: data[14].extract_int()?,
            field_0x39: data[15].extract_int()?,
            flag_8: data[16].extract_int()?,
            field_0x3a: data[17].extract_int()?,
            flag_9: data[18].extract_int()?,
            field_0x3b: data[19].extract_int()?,
            flag_10: data[20].extract_int()?,
            field_0x3c: data[21].extract_int()?,
            flag_11: data[22].extract_int()?,
            field_0x3d: data[23].extract_int()?,
            flag_12: data[24].extract_int()?,
            field_0x3e: data[25].extract_int()?,
            flag_13: data[26].extract_int()?,
            field_0x3f: data[27].extract_int()?,
            flag_14: data[28].extract_int()?,
            field_0x40: data[29].extract_int()?,
        })
    }
}
